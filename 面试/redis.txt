问题记录:
1.aof持久化:对redis写命令持久化(相比rdbc,数据更加完整(aof后台重写))
    (1)AOF持久化实现
        a.命令追加:服务器端执行写命令时,同时会将写命令追加到aof缓存区中,在一个进程中执行,所以频繁同步磁盘(io开销大),会影响服务器处理redis命令的性能
        b.aof文件的写入与同步:aof缓存区写入aof文件，aof文件定期同步（同步:写到磁盘上）
    (2)aof文件的载入和数据还原:生成伪客户端执行aof文件指令来还原数据
    (3)aof重写
        a.aof重写的实现原理:通过读取数据库中的键值对来实现
        b.aof后台重写:通过子进程重写&aof重写缓存区(保证了aof数据更加完整)
2.rdb持久化:对redis数据持久化
    1.fork子进程来创建当前时间点的rdb文件;(写时复制机制会使fork子进程开销不大)
        a.写时复制:父子进程共享同一个物理内存，和不同的虚拟内存;当父进程(redis服务端)执行写命令时,子进程会复制当前父进程的物理内存,开辟新的物理内存空间,所以子进程拷贝的数据是写时复制那一刻的数据，后续父进程的写入命令不会被拷贝.

资源:
1.《Redis设计与实现》
2.https://draveness.me/whys-the-design-redis-bgsave-fork/